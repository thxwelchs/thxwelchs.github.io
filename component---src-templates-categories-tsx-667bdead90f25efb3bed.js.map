{"version":3,"sources":["webpack:///./src/components/subscribe/SubscribeLogo.tsx","webpack:///./src/components/subscribe/SubscribeOverlay.tsx","webpack:///./src/components/header/SiteNav.tsx","webpack:///./src/components/icons/facebook.tsx","webpack:///./src/components/subscribe/SubscribeForm.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/icons/twitter.tsx","webpack:///./src/templates/categories.tsx"],"names":["SubscribeOverlayLogo","SubscribeLogo","query","render","data","logo","src","childImageSharp","fixed","alt","config","title","SubscribeOverlay","props","open","colors","midgrey","SubscribeOverlayClose","SubscribeOverlayContent","SubscribeOverlayTitle","SubscribeOverlayDescription","SubscribeModal","state","isOpen","escFunction","event","key","close","setState","subscribeEsc","unsubscribeEsc","componentWillUnmount","this","document","addEventListener","removeEventListener","onClick","SubscribeForm","React","HomeNavRaise","SiteNavStyles","SiteNavLeft","NavStyles","SiteNavRight","SocialLinks","SubscribeButton","SiteNav","subscribe","openModal","current","isHome","console","log","css","SiteNavLogo","role","to","allMarkdownRemark","categories","map","category","facebook","SocialLink","href","target","rel","twitter","showSubscribe","ref","Facebook","xmlns","viewBox","style","height","d","SubscribeFormStyles","SubscribeEmail","lighten","lightgrey","darken","SubscribeFormButton","mix","blue","desaturate","FormGroup","noValidate","action","mailchimpAction","method","id","name","className","type","mailchimpEmailFieldName","placeholder","position","left","aria-hidden","mailchimpName","tabIndex","SiteFooter","setLightness","darkgrey","SiteFooterContent","SiteFooterNav","Footer","outer","inner","Date","getFullYear","footer","Twitter","Tags","tag","pageContext","edges","totalCount","tagData","allTagYaml","find","n","node","toLowerCase","lang","content","description","property","siteUrl","pathContext","slug","split","image","SiteHeader","backgroundImage","fluid","SiteMain","PostFeed","PostFeedRaise","fields","post"],"mappings":"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","file":"component---src-templates-categories-tsx-667bdead90f25efb3bed.js","sourcesContent":["import { graphql, StaticQuery } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport config from '../../website-config';\n\nconst SubscribeOverlayLogo = styled.img`\n  position: fixed;\n  top: 23px;\n  left: 30px;\n  height: 30px;\n`;\n\ninterface SiteNavLogoProps {\n  logo?: {\n    childImageSharp: {\n      fixed: any;\n    };\n  };\n}\n\nconst SubscribeLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query SubscribeOverlayLogo {\n        logo: file(relativePath: { eq: \"img/thxwelchs-logo-v2.png\" }) {\n          childImageSharp {\n            # Specify the image processing specifications right in the query.\n            # Makes it trivial to update as your page's design changes.\n            fixed {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={(data: SiteNavLogoProps) =>\n      data.logo && (\n        <SubscribeOverlayLogo src={data.logo.childImageSharp.fixed.src} alt={config.title} />\n      )}\n  />\n);\n\nexport default SubscribeLogo;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\nimport SubscribeForm from './SubscribeForm';\nimport SubscribeLogo from './SubscribeLogo';\n\ninterface SubscribeOverlayProps {\n  open?: boolean;\n}\n\nconst SubscribeOverlay = styled.div<SubscribeOverlayProps>`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 9000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 25, 40, 0.97);\n  opacity: ${(props: SubscribeOverlayProps) => (props.open ? 1 : 0)};\n  transition: opacity 200ms ease-in;\n  pointer-events: ${(props: SubscribeOverlayProps) => (props.open ? 'auto' : 'none')};\n  backdrop-filter: blur(3px);\n\n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 500px;\n  }\n\n  .form-group {\n    flex-grow: 1;\n  }\n\n  .subscribe-email {\n    display: block;\n    padding: 14px 20px;\n    width: 100%;\n    border: none;\n    color: ${colors.midgrey};\n    font-size: 2rem;\n    line-height: 1em;\n    font-weight: normal;\n    letter-spacing: 0.5px;\n    user-select: text;\n    border-radius: 8px;\n    transition: border-color 0.15s linear;\n\n    -webkit-appearance: none;\n  }\n\n  button {\n    display: inline-block;\n    margin: 0 0 0 15px;\n    padding: 0 25px;\n    height: 52px;\n    outline: none;\n    color: #fff;\n    font-size: 1.7rem;\n    line-height: 37px;\n    font-weight: 400;\n    text-align: center;\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n    background: linear-gradient(\n      color(var(--blue) whiteness(+7%)),\n      color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\n      color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\n      color(var(--blue) lightness(-4%) saturation(-10%))\n    );\n    border-radius: 8px;\n    box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\n\n    -webkit-font-smoothing: subpixel-antialiased;\n  }\n`;\n\nconst SubscribeOverlayClose = styled.a`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(45deg);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(-45deg);\n  }\n\n  :hover {\n    cursor: default;\n  }\n`;\n\nconst SubscribeOverlayContent = styled.div`\n  position: relative;\n  z-index: 9999;\n  margin: 0 0 5vw 0;\n  padding: 4vw;\n  color: #fff;\n  text-align: center;\n`;\n\nconst SubscribeOverlayTitle = styled.h1`\n  display: inline-block;\n  margin: 0 0 10px 0;\n  font-size: 6rem;\n  line-height: 1.15em;\n`;\n\nconst SubscribeOverlayDescription = styled.p`\n  margin: 0 auto 50px;\n  max-width: 650px;\n  font-family: Georgia, serif;\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 300;\n  opacity: 0.8;\n`;\n\ninterface SubscribeState {\n  isOpen: boolean;\n}\n\nclass SubscribeModal extends React.Component<any, SubscribeState> {\n  state = { isOpen: false };\n\n  componentWillUnmount() {\n    this.unsubscribeEsc();\n  }\n\n  escFunction = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  subscribeEsc() {\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n\n  unsubscribeEsc() {\n    document.removeEventListener('keydown', this.escFunction, false);\n  }\n\n  open = () => {\n    this.setState({ isOpen: true });\n    this.subscribeEsc();\n  };\n\n  close = () => {\n    this.setState({ isOpen: false });\n    this.unsubscribeEsc();\n  };\n\n  render() {\n    return (\n      <SubscribeOverlay open={this.state.isOpen}>\n        <SubscribeOverlayClose onClick={this.close} />\n        <SubscribeOverlayContent>\n          <SubscribeLogo />\n          <SubscribeOverlayTitle>Subscribe to {config.title}</SubscribeOverlayTitle>\n          <SubscribeOverlayDescription>\n            Stay up to date! Get all the latest &amp; greatest posts delivered straight to your\n            inbox\n          </SubscribeOverlayDescription>\n          <SubscribeForm />\n        </SubscribeOverlayContent>\n      </SubscribeOverlay>\n    );\n  }\n}\n\nexport default SubscribeModal;\n","// tslint:disable:no-http-string\nimport { StaticQuery, graphql, Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { SocialLink } from '../../styles/shared';\nimport config from '../../website-config';\nimport Facebook from '../icons/facebook';\nimport Twitter from '../icons/twitter';\nimport SubscribeModal from '../subscribe/SubscribeOverlay';\nimport SiteNavLogo from './SiteNavLogo';\n\nconst HomeNavRaise = css`\n  @media (min-width: 900px) {\n    position: relative;\n    top: -70px;\n  }\n`;\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 300;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  overflow-y: hidden;\n  height: 40px;\n  font-size: 1.2rem;\n`;\n\nconst SiteNavLeft = styled.div`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n  margin-right: 10px;\n  padding-bottom: 80px;\n  letter-spacing: 0.4px;\n  white-space: nowrap;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n    padding-left: 4vw;\n  }\n`;\n\nconst NavStyles = css`\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n    // text-transform: uppercase;\n  }\n\n  li a {\n    display: block;\n    margin: 0;\n    padding: 10px 12px;\n    color: #fff;\n    opacity: 0.8;\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n`;\n\nconst SiteNavRight = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 40px;\n\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst SocialLinks = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  a:last-of-type {\n    padding-right: 20px;\n  }\n`;\n\nconst SubscribeButton = styled.a`\n  display: block;\n  padding: 4px 10px;\n  border: #fff 1px solid;\n  color: #fff;\n  font-size: 1.2rem;\n  line-height: 1em;\n  border-radius: 10px;\n  opacity: 0.8;\n\n  :hover {\n    text-decoration: none;\n    opacity: 1;\n    cursor: pointer;\n  }\n`;\n\ninterface SiteNavProps {\n  isHome?: boolean;\n}\n\nclass SiteNav extends React.Component<SiteNavProps> {\n  subscribe = React.createRef<SubscribeModal>();\n\n  openModal = () => {\n    if (this.subscribe.current) {\n      this.subscribe.current.open();\n    }\n  };\n\n  render() {\n    const { isHome = false } = this.props;\n    console.log(this.props);\n    return (\n      <nav css={[isHome && HomeNavRaise, SiteNavStyles]}>\n        <SiteNavLeft>\n          {!isHome && <SiteNavLogo />}\n          <ul css={NavStyles} role=\"menu\">\n            {/* TODO: mark current nav item - add class nav-current */}\n            <li role=\"menuitem\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/about\">About</Link>\n            </li>\n            <StaticQuery\n              query={graphql`\n                query {\n                  allMarkdownRemark {\n                    categories: distinct(field: frontmatter___category)\n                  }\n                }\n              `\n              }\n              render={data => {\n                return data.allMarkdownRemark.categories.map((category: string) => <li role=\"menuitem\" key={category}><Link to={`/category/${category}/`}>{category}</Link></li>)\n              }}\n            />\n            {/* <li role=\"menuitem\">\n              <Link to=\"/tags/getting-started/\">Getting Started</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/tags/speeches/\">Speeches</Link>\n            </li> */}\n          </ul>\n        </SiteNavLeft>\n        <SiteNavRight>\n          <SocialLinks>\n            {config.facebook && (\n              <a\n                css={SocialLink}\n                href={config.facebook}\n                target=\"_blank\"\n                title=\"Facebook\"\n                rel=\"noopener noreferrer\"\n              >\n                <Facebook />\n              </a>\n            )}\n            {config.twitter && (\n              <a\n                css={SocialLink}\n                href={config.twitter}\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Twitter />\n              </a>\n            )}\n          </SocialLinks>\n          {config.showSubscribe && (\n            <SubscribeButton onClick={this.openModal}>Subscribe</SubscribeButton>\n          )}\n          {config.showSubscribe && <SubscribeModal ref={this.subscribe} />}\n        </SiteNavRight>\n      </nav>\n    );\n  }\n}\n\nexport default SiteNav;\n\n// export const query = graphql`\n//   query {\n//     allMarkdownRemark {\n//       categories: distinct(field: frontmatter___category)\n//     }\n//   }\n// `\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Facebook: React.FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" style={{ height: '1.5rem' }}>\n    <path d=\"M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z\" />\n  </svg>\n);\nexport default Facebook;\n","import { darken, desaturate, lighten, mix } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\n\nconst SubscribeFormStyles = css`\n  @media (max-width: 500px) {\n    -ms-flex-direction: column;\n    flex-direction: column;\n  }\n`;\n\nconst SubscribeEmail = styled.input`\n  display: block;\n  padding: 10px;\n  width: 100%;\n  /* border: color(var(--lightgrey) l(+7%)) 1px solid; */\n  border: ${lighten('0.07', colors.lightgrey)};\n  color: ${colors.midgrey};\n  font-size: 1.8rem;\n  line-height: 1em;\n  font-weight: normal;\n  user-select: text;\n  border-radius: 5px;\n  transition: border-color 0.15s linear;\n\n  -webkit-appearance: none;\n  :focus {\n    outline: 0;\n    /* border-color: color(var(--lightgrey) l(-2%)); */\n    border-color: ${darken('0.02', colors.lightgrey)};\n  }\n`;\n\nconst SubscribeFormButton = styled.button`\n  display: inline-block;\n  margin: 0 0 0 10px;\n  padding: 0 20px;\n  height: 41px;\n  outline: none;\n  color: #fff;\n  font-size: 1.5rem;\n  line-height: 37px;\n  font-weight: 400;\n  text-align: center;\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n  /* background: linear-gradient(\n    color(var(--blue) whiteness(+7%)),\n    color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\n    color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\n    color(var(--blue) lightness(-4%) saturation(-10%))\n  ); */\n  background: linear-gradient(\n    ${mix('0.1', '#fff', colors.blue)},\n    ${desaturate('0.1', darken('0.07', colors.blue))} 60%,\n    ${desaturate('0.1', darken('0.07', colors.blue))} 90%,\n    ${desaturate('0.1', darken('0.04', colors.blue))}\n  );\n  border-radius: 5px;\n  box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\n\n  -webkit-font-smoothing: subpixel-antialiased;\n\n  :active,\n  :focus {\n    /* background: color(var(--blue) lightness(-9%) saturation(-10%)); */\n    background: ${desaturate('0.1', darken('0.09', colors.blue))};\n  }\n  @media (max-width: 500px) {\n    margin: 10px 0 0;\n    width: 100%;\n  }\n`;\n\nconst FormGroup = styled.div`\n  flex-grow: 1;\n  @media (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nconst SubscribeForm: React.FC = () => {\n  return (\n    <form\n      noValidate\n      css={SubscribeFormStyles}\n      action={config.mailchimpAction}\n      method=\"post\"\n      id=\"mc-embedded-subscribe-form\"\n      name=\"mc-embedded-subscribe-form\"\n      target=\"_blank\"\n    >\n      {/* This is required for the form to work correctly  */}\n      <FormGroup className=\"form-group\">\n        <SubscribeEmail\n          className=\"subscribe-email\"\n          type=\"email\"\n          name={config.mailchimpEmailFieldName}\n          id={config.mailchimpEmailFieldName}\n          placeholder=\"youremail@example.com\"\n        />\n      </FormGroup>\n      <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden=\"true\">\n        <input type=\"text\" name={config.mailchimpName} tabIndex={-1} />\n      </div>\n      <SubscribeFormButton type=\"submit\">\n        <span>Subscribe</span>\n      </SubscribeFormButton>\n    </form>\n  );\n};\n\nexport default SubscribeForm;\n","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-of-type {\n      margin-left: 0;\n    }\n  }\n`;\n\nconst Footer: React.FC = () => {\n  return (\n    <footer css={[outer, SiteFooter]}>\n      <div css={[inner, SiteFooterContent]}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}{' '}\n          {config.footer && (\n            <Link to=\"/\">\n              | {config.title} {config.footer}\n            </Link>\n          )}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n\n          <a href=\"https://ghost.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Ghost\n          </a>\n\n          <a href=\"/rss.xml\">RSS</a>\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Twitter: React.FC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <path d=\"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z\" />\n  </svg>\n);\nexport default Twitter;\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport Helmet from 'react-helmet';\nimport config from '../website-config';\n\ninterface TagTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  pageContext: {\n    tag: string;\n    category: string;\n  };\n  data: {\n    allTagYaml: {\n      edges: Array<{\n        node: {\n          id: string;\n          description: string;\n          image?: {\n            childImageSharp: {\n              fluid: any;\n            };\n          };\n        };\n      }>;\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst Tags: React.FC<TagTemplateProps> = props => {\n  const tag = (props.pageContext.tag) ? props.pageContext.tag : '';\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n  const tagData = props.data.allTagYaml.edges.find(\n    n => n.node.id.toLowerCase() === tag.toLowerCase(),\n  );\n  const category = props.pageContext.category || '';\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {category} - {config.title}\n        </title>\n        <meta\n          name=\"description\"\n          content={tagData && tagData.node ? tagData.node.description : ''}\n        />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={`${tag} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={`${tag} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header\n          className={`${tagData && tagData.node.image ? '' : 'no-cover'}`}\n          css={[outer, SiteHeader]}\n          style={{\n            backgroundImage:\n              tagData && tagData.node.image ?\n                `url('${tagData.node.image.childImageSharp.fluid.src}')` :\n                '',\n          }}\n        >\n          <div css={inner}>\n            <SiteNav isHome={false} />\n            <SiteHeaderContent>\n              <SiteTitle>{category}</SiteTitle>\n              <SiteDescription>\n                {tagData && tagData.node.description ? (\n                  tagData.node.description\n                ) : (\n                  <>\n                    {totalCount > 0 && `Total ${totalCount} post`}\n                    {totalCount === 0 && 'No post'}\n                  </>\n                )}\n              </SiteDescription>\n            </SiteHeaderContent>\n          </div>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed, PostFeedRaise]}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($category: String) {\n    allTagYaml {\n      edges {\n        node {\n          id\n          description\n          image {\n            childImageSharp {\n              fluid(maxWidth: 3720) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { in: [$category] }, draft: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1240) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 90) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}