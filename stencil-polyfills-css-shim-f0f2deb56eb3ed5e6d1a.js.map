{"version":3,"sources":["webpack:///./node_modules/@deckdeckgo/highlight-code/dist/esm-es5/css-shim-8775d9ad-556f0cc2.js"],"names":["__webpack_require__","StyleNode","this","start","end","previous","parent","rules","parsedCssText","cssText","atRule","type","keyframesName","selector","parsedSelector","parse","text","parseCss","node","t","substring","trim","ss","s","replace","code","arguments","repeat","length","_expandUnicodeEscapes","RX","multipleSpaces","lastIndexOf","indexOf","AT_START","MEDIA_START","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","i","l","r","root","n","OPEN_BRACE","p","push","CLOSE_BRACE","lex","comments","port","customProp","mixinProp","mixinApply","varApply","findRegex","regex","offset","VAR_USAGE_START","VAR_ASSIGN_START","COMMENTS","TRAILING_LINES","compileVar","template","varMeta","varPos","endVar","count","c","findVarEndIndex","_a","propName","fallback","slice","join","undefined","parseVar","compileTemplate","params","props","prop","executeTemplate","resolveVar","_final","findEndValue","onStr","_double","index","_final2","assignPos","removeCustomAssigns","segments","resolveValues","selectors","forEach","declarations","dec","value","propsValues","entries","Object","_loop_1","dirty","key","propValue","getSelectors","filter","rule","xArray","FIND_DECLARATIONS","exec","normalizeValue","important","getDeclarations","specificity","nu","IMPORTANT","endsWith","substr","getSelectorsForScopes","scopes","scope","apply","parseCSS","original","ast","usesCssVars","addGlobalStyle","globalScopes","styleEl","some","css","textContent","updateGlobalScopes","replaceScope","oldScopeId","newScopeId","find","RegExp","loadDocument","doc","loadDocumentStyles","promises","linkElms","querySelectorAll","addGlobalLink","Promise","all","loadDocumentLinks","then","Array","from","map","style","Boolean","linkElm","url","href","fetch","rsp","CSS_VARIABLE_REGEXP","test","parentNode","CSS_URL_REGEXP","lastIndex","hasRelativeUrls","originalUrl","basePath","fullMatch","relativeUrl","fixRelativeUrls","createElement","setAttribute","insertBefore","remove","err","console","error","win","CustomStyle","hostStyleMap","WeakMap","hostScopeMap","scopesMap","Map","didInit","prototype","_this","requestAnimationFrame","resolve","MutationObserver","observe","document","head","childList","addLink","linkEl","updateGlobal","createHostStyle","hostEl","cssScopeId","isScoped","has","Error","scopeId","baseScope","registerHostTemplate","set","segment","sel","assign","removeHost","get","updateHost","scopesForElement","hostTemplateMap","parentElement","getScopesForElement","activeSelectors","el","matches","sort","a","b","getActiveSelectors","window","__cssshim","CSS","supports"],"mappings":"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","file":"stencil-polyfills-css-shim-f0f2deb56eb3ed5e6d1a.js","sourcesContent":["require(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es6.weak-map\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.some\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.string.ends-with\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es7.object.entries\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.array.last-index-of\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n/** @unrestricted */\nvar StyleNode =\n/** @class */\nfunction () {\n  function StyleNode() {\n    this.start = 0;\n    this.end = 0;\n    this.previous = null;\n    this.parent = null;\n    this.rules = null;\n    this.parsedCssText = '';\n    this.cssText = '';\n    this.atRule = false;\n    this.type = 0;\n    this.keyframesName = '';\n    this.selector = '';\n    this.parsedSelector = '';\n  }\n\n  return StyleNode;\n}(); // given a string of css, return a simple rule tree\n\n/**\n * @param {string} text\n * @return {StyleNode}\n */\n\n\nfunction parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n} // remove stuff we don't care about that may hinder parsing\n\n/**\n * @param {string} cssText\n * @return {string}\n */\n\n\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n} // super simple {...} lexer that returns a node tree\n\n/**\n * @param {string} text\n * @return {StyleNode}\n */\n\n\nfunction lex(text) {\n  var root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length;\n  var n = root;\n\n  for (var i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n\n      var p = n;\n      var previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n\n  return root;\n} // add selectors/cssText to node tree\n\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\n\n\nfunction parseCss(node, text) {\n  var t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n\n  if (node.parent) {\n    var ss = node.previous ? node.previous['end'] : node.parent['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' '); // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n\n    t = t.substring(t.lastIndexOf(';') + 1);\n    var s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = s.indexOf(AT_START) === 0; // note, support a subset of rule types...\n\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n\n  var r$ = node['rules'];\n\n  if (r$) {\n    for (var i = 0, l = r$.length, r = void 0; i < l && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n\n  return node;\n}\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\n\n\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function () {\n    var code = arguments[1],\n        repeat = 6 - code.length;\n\n    while (repeat--) {\n      code = '0' + code;\n    }\n\n    return '\\\\' + code;\n  });\n}\n/** @enum {number} */\n\n\nvar types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n};\nvar OPEN_BRACE = '{';\nvar CLOSE_BRACE = '}'; // helper regexp's\n\nvar RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n};\nvar VAR_START = '--';\nvar MEDIA_START = '@media';\nvar AT_START = '@';\n\nfunction findRegex(regex, cssText, offset) {\n  regex['lastIndex'] = 0;\n  var r = cssText.substring(offset).match(regex);\n\n  if (r) {\n    var start = offset + r['index'];\n    return {\n      start: start,\n      end: start + r[0].length\n    };\n  }\n\n  return null;\n}\n\nvar VAR_USAGE_START = /\\bvar\\(/;\nvar VAR_ASSIGN_START = /\\B--[\\w-]+\\s*:/;\nvar COMMENTS = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim;\nvar TRAILING_LINES = /^[\\t ]+\\n/gm;\n\nfunction resolveVar(props, prop, fallback) {\n  if (props[prop]) {\n    return props[prop];\n  }\n\n  if (fallback) {\n    return executeTemplate(fallback, props);\n  }\n\n  return '';\n}\n\nfunction findVarEndIndex(cssText, offset) {\n  var count = 0;\n  var i = offset;\n\n  for (; i < cssText.length; i++) {\n    var c = cssText[i];\n\n    if (c === '(') {\n      count++;\n    } else if (c === ')') {\n      count--;\n\n      if (count <= 0) {\n        return i + 1;\n      }\n    }\n  }\n\n  return i;\n}\n\nfunction parseVar(cssText, offset) {\n  var varPos = findRegex(VAR_USAGE_START, cssText, offset);\n\n  if (!varPos) {\n    return null;\n  }\n\n  var endVar = findVarEndIndex(cssText, varPos.start);\n  var varContent = cssText.substring(varPos.end, endVar - 1);\n\n  var _a = varContent.split(','),\n      propName = _a[0],\n      fallback = _a.slice(1);\n\n  return {\n    start: varPos.start,\n    end: endVar,\n    propName: propName.trim(),\n    fallback: fallback.length > 0 ? fallback.join(',').trim() : undefined\n  };\n}\n\nfunction compileVar(cssText, template, offset) {\n  var varMeta = parseVar(cssText, offset);\n\n  if (!varMeta) {\n    template.push(cssText.substring(offset, cssText.length));\n    return cssText.length;\n  }\n\n  var propName = varMeta.propName;\n  var fallback = varMeta.fallback != null ? compileTemplate(varMeta.fallback) : undefined;\n  template.push(cssText.substring(offset, varMeta.start), function (params) {\n    return resolveVar(params, propName, fallback);\n  });\n  return varMeta.end;\n}\n\nfunction executeTemplate(template, props) {\n  var _final = '';\n\n  for (var i = 0; i < template.length; i++) {\n    var s = template[i];\n    _final += typeof s === 'string' ? s : s(props);\n  }\n\n  return _final;\n}\n\nfunction findEndValue(cssText, offset) {\n  var onStr = false;\n  var _double = false;\n  var i = offset;\n\n  for (; i < cssText.length; i++) {\n    var c = cssText[i];\n\n    if (onStr) {\n      if (_double && c === '\"') {\n        onStr = false;\n      }\n\n      if (!_double && c === '\\'') {\n        onStr = false;\n      }\n    } else {\n      if (c === '\"') {\n        onStr = true;\n        _double = true;\n      } else if (c === '\\'') {\n        onStr = true;\n        _double = false;\n      } else if (c === ';') {\n        return i + 1;\n      } else if (c === '}') {\n        return i;\n      }\n    }\n  }\n\n  return i;\n}\n\nfunction removeCustomAssigns(cssText) {\n  var _final2 = '';\n  var offset = 0;\n\n  while (true) {\n    var assignPos = findRegex(VAR_ASSIGN_START, cssText, offset);\n    var start = assignPos ? assignPos.start : cssText.length;\n    _final2 += cssText.substring(offset, start);\n\n    if (assignPos) {\n      offset = findEndValue(cssText, start);\n    } else {\n      break;\n    }\n  }\n\n  return _final2;\n}\n\nfunction compileTemplate(cssText) {\n  var index = 0;\n  cssText = cssText.replace(COMMENTS, '');\n  cssText = removeCustomAssigns(cssText).replace(TRAILING_LINES, '');\n  var segments = [];\n\n  while (index < cssText.length) {\n    index = compileVar(cssText, segments, index);\n  }\n\n  return segments;\n}\n\nfunction resolveValues(selectors) {\n  var props = {};\n  selectors.forEach(function (selector) {\n    selector.declarations.forEach(function (dec) {\n      props[dec.prop] = dec.value;\n    });\n  });\n  var propsValues = {};\n  var entries = Object.entries(props);\n\n  var _loop_1 = function _loop_1(i) {\n    var dirty = false;\n    entries.forEach(function (_a) {\n      var key = _a[0],\n          value = _a[1];\n      var propValue = executeTemplate(value, propsValues);\n\n      if (propValue !== propsValues[key]) {\n        propsValues[key] = propValue;\n        dirty = true;\n      }\n    });\n\n    if (!dirty) {\n      return \"break\";\n    }\n  };\n\n  for (var i = 0; i < 10; i++) {\n    var state_1 = _loop_1();\n\n    if (state_1 === \"break\") break;\n  }\n\n  return propsValues;\n}\n\nfunction getSelectors(root, index) {\n  if (index === void 0) {\n    index = 0;\n  }\n\n  if (!root.rules) {\n    return [];\n  }\n\n  var selectors = [];\n  root.rules.filter(function (rule) {\n    return rule.type === types.STYLE_RULE;\n  }).forEach(function (rule) {\n    var declarations = getDeclarations(rule.cssText);\n\n    if (declarations.length > 0) {\n      rule.parsedSelector.split(',').forEach(function (selector) {\n        selector = selector.trim();\n        selectors.push({\n          selector: selector,\n          declarations: declarations,\n          specificity: computeSpecificity(),\n          nu: index\n        });\n      });\n    }\n\n    index++;\n  });\n  return selectors;\n}\n\nfunction computeSpecificity(_selector) {\n  return 1;\n}\n\nvar IMPORTANT = '!important';\nvar FIND_DECLARATIONS = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gm;\n\nfunction getDeclarations(cssText) {\n  var declarations = [];\n  var xArray;\n\n  while (xArray = FIND_DECLARATIONS.exec(cssText.trim())) {\n    var _a = normalizeValue(xArray[2]),\n        value = _a.value,\n        important = _a.important;\n\n    declarations.push({\n      prop: xArray[1].trim(),\n      value: compileTemplate(value),\n      important: important\n    });\n  }\n\n  return declarations;\n}\n\nfunction normalizeValue(value) {\n  var regex = /\\s+/gim;\n  value = value.replace(regex, ' ').trim();\n  var important = value.endsWith(IMPORTANT);\n\n  if (important) {\n    value = value.substr(0, value.length - IMPORTANT.length).trim();\n  }\n\n  return {\n    value: value,\n    important: important\n  };\n}\n\nfunction getActiveSelectors(hostEl, hostScopeMap, globalScopes) {\n  // computes the css scopes that might affect this particular element\n  // avoiding using spread arrays to avoid ts helper fns when in es5\n  var scopes = [];\n  var scopesForElement = getScopesForElement(hostScopeMap, hostEl); // globalScopes are always took into account\n\n  globalScopes.forEach(function (s) {\n    return scopes.push(s);\n  }); // the parent scopes are computed by walking parent dom until <html> is reached\n\n  scopesForElement.forEach(function (s) {\n    return scopes.push(s);\n  }); // each scope might have an array of associated selectors\n  // let's flatten the complete array of selectors from all the scopes\n\n  var selectorSet = getSelectorsForScopes(scopes); // we filter to only the selectors that matches the hostEl\n\n  var activeSelectors = selectorSet.filter(function (selector) {\n    return matches(hostEl, selector.selector);\n  }); // sort selectors by specifity\n\n  return sortSelectors(activeSelectors);\n}\n\nfunction getScopesForElement(hostTemplateMap, node) {\n  var scopes = [];\n\n  while (node) {\n    var scope = hostTemplateMap.get(node);\n\n    if (scope) {\n      scopes.push(scope);\n    }\n\n    node = node.parentElement;\n  }\n\n  return scopes;\n}\n\nfunction getSelectorsForScopes(scopes) {\n  var selectors = [];\n  scopes.forEach(function (scope) {\n    selectors.push.apply(selectors, scope.selectors);\n  });\n  return selectors;\n}\n\nfunction sortSelectors(selectors) {\n  selectors.sort(function (a, b) {\n    if (a.specificity === b.specificity) {\n      return a.nu - b.nu;\n    }\n\n    return a.specificity - b.specificity;\n  });\n  return selectors;\n}\n\nfunction matches(el, selector) {\n  return selector === ':root' || selector === 'html' || el.matches(selector);\n}\n\nfunction parseCSS(original) {\n  var ast = parse(original);\n  var template = compileTemplate(original);\n  var selectors = getSelectors(ast);\n  return {\n    original: original,\n    template: template,\n    selectors: selectors,\n    usesCssVars: template.length > 1\n  };\n}\n\nfunction addGlobalStyle(globalScopes, styleEl) {\n  if (globalScopes.some(function (css) {\n    return css.styleEl === styleEl;\n  })) {\n    return false;\n  }\n\n  var css = parseCSS(styleEl.textContent);\n  css.styleEl = styleEl;\n  globalScopes.push(css);\n  return true;\n}\n\nfunction updateGlobalScopes(scopes) {\n  var selectors = getSelectorsForScopes(scopes);\n  var props = resolveValues(selectors);\n  scopes.forEach(function (scope) {\n    if (scope.usesCssVars) {\n      scope.styleEl.textContent = executeTemplate(scope.template, props);\n    }\n  });\n}\n\nfunction reScope(scope, scopeId) {\n  var template = scope.template.map(function (segment) {\n    return typeof segment === 'string' ? replaceScope(segment, scope.scopeId, scopeId) : segment;\n  });\n  var selectors = scope.selectors.map(function (sel) {\n    return Object.assign(Object.assign({}, sel), {\n      selector: replaceScope(sel.selector, scope.scopeId, scopeId)\n    });\n  });\n  return Object.assign(Object.assign({}, scope), {\n    template: template,\n    selectors: selectors,\n    scopeId: scopeId\n  });\n}\n\nfunction replaceScope(original, oldScopeId, newScopeId) {\n  original = replaceAll(original, \"\\\\.\" + oldScopeId, \".\" + newScopeId);\n  return original;\n}\n\nfunction replaceAll(input, find, replace) {\n  return input.replace(new RegExp(find, 'g'), replace);\n}\n\nfunction loadDocument(doc, globalScopes) {\n  loadDocumentStyles(doc, globalScopes);\n  return loadDocumentLinks(doc, globalScopes).then(function () {\n    updateGlobalScopes(globalScopes);\n  });\n}\n\nfunction startWatcher(doc, globalScopes) {\n  var mutation = new MutationObserver(function () {\n    if (loadDocumentStyles(doc, globalScopes)) {\n      updateGlobalScopes(globalScopes);\n    }\n  });\n  mutation.observe(document.head, {\n    childList: true\n  });\n}\n\nfunction loadDocumentLinks(doc, globalScopes) {\n  var promises = [];\n  var linkElms = doc.querySelectorAll('link[rel=\"stylesheet\"][href]:not([data-no-shim])');\n\n  for (var i = 0; i < linkElms.length; i++) {\n    promises.push(addGlobalLink(doc, globalScopes, linkElms[i]));\n  }\n\n  return Promise.all(promises);\n}\n\nfunction loadDocumentStyles(doc, globalScopes) {\n  var styleElms = Array.from(doc.querySelectorAll('style:not([data-styles]):not([data-no-shim])'));\n  return styleElms.map(function (style) {\n    return addGlobalStyle(globalScopes, style);\n  }).some(Boolean);\n}\n\nfunction addGlobalLink(doc, globalScopes, linkElm) {\n  var url = linkElm.href;\n  return fetch(url).then(function (rsp) {\n    return rsp.text();\n  }).then(function (text) {\n    if (hasCssVariables(text) && linkElm.parentNode) {\n      if (hasRelativeUrls(text)) {\n        text = fixRelativeUrls(text, url);\n      }\n\n      var styleEl = doc.createElement('style');\n      styleEl.setAttribute('data-styles', '');\n      styleEl.textContent = text;\n      addGlobalStyle(globalScopes, styleEl);\n      linkElm.parentNode.insertBefore(styleEl, linkElm);\n      linkElm.remove();\n    }\n  })[\"catch\"](function (err) {\n    console.error(err);\n  });\n} // This regexp tries to determine when a variable is declared, for example:\n//\n// .my-el { --highlight-color: green; }\n//\n// but we don't want to trigger when a classname uses \"--\" or a pseudo-class is\n// used. We assume that the only characters that can preceed a variable\n// declaration are \"{\", from an opening block, \";\" from a preceeding rule, or a\n// space. This prevents the regexp from matching a word in a selector, since\n// they would need to start with a \".\" or \"#\". (We assume element names don't\n// start with \"--\").\n\n\nvar CSS_VARIABLE_REGEXP = /[\\s;{]--[-a-zA-Z0-9]+\\s*:/m;\n\nfunction hasCssVariables(css) {\n  return css.indexOf('var(') > -1 || CSS_VARIABLE_REGEXP.test(css);\n} // This regexp find all url() usages with relative urls\n\n\nvar CSS_URL_REGEXP = /url[\\s]*\\([\\s]*['\"]?(?!(?:https?|data)\\:|\\/)([^\\'\\\"\\)]*)[\\s]*['\"]?\\)[\\s]*/gim;\n\nfunction hasRelativeUrls(css) {\n  CSS_URL_REGEXP.lastIndex = 0;\n  return CSS_URL_REGEXP.test(css);\n}\n\nfunction fixRelativeUrls(css, originalUrl) {\n  // get the basepath from the original import url\n  var basePath = originalUrl.replace(/[^/]*$/, ''); // replace the relative url, with the new relative url\n\n  return css.replace(CSS_URL_REGEXP, function (fullMatch, url) {\n    // rhe new relative path is the base path + uri\n    // TODO: normalize relative URL\n    var relativeUrl = basePath + url;\n    return fullMatch.replace(url, relativeUrl);\n  });\n}\n\nvar CustomStyle =\n/** @class */\nfunction () {\n  function CustomStyle(win, doc) {\n    this.win = win;\n    this.doc = doc;\n    this.count = 0;\n    this.hostStyleMap = new WeakMap();\n    this.hostScopeMap = new WeakMap();\n    this.globalScopes = [];\n    this.scopesMap = new Map();\n    this.didInit = false;\n  }\n\n  CustomStyle.prototype.i = function () {\n    var _this = this;\n\n    if (this.didInit || !this.win.requestAnimationFrame) {\n      return Promise.resolve();\n    } else {\n      this.didInit = true;\n      return new Promise(function (resolve) {\n        _this.win.requestAnimationFrame(function () {\n          startWatcher(_this.doc, _this.globalScopes);\n          loadDocument(_this.doc, _this.globalScopes).then(function () {\n            return resolve();\n          });\n        });\n      });\n    }\n  };\n\n  CustomStyle.prototype.addLink = function (linkEl) {\n    var _this = this;\n\n    return addGlobalLink(this.doc, this.globalScopes, linkEl).then(function () {\n      _this.updateGlobal();\n    });\n  };\n\n  CustomStyle.prototype.addGlobalStyle = function (styleEl) {\n    if (addGlobalStyle(this.globalScopes, styleEl)) {\n      this.updateGlobal();\n    }\n  };\n\n  CustomStyle.prototype.createHostStyle = function (hostEl, cssScopeId, cssText, isScoped) {\n    if (this.hostScopeMap.has(hostEl)) {\n      throw new Error('host style already created');\n    }\n\n    var baseScope = this.registerHostTemplate(cssText, cssScopeId, isScoped);\n    var styleEl = this.doc.createElement('style');\n    styleEl.setAttribute('data-no-shim', '');\n\n    if (!baseScope.usesCssVars) {\n      // This component does not use (read) css variables\n      styleEl.textContent = cssText;\n    } else if (isScoped) {\n      // This component is dynamic: uses css var and is scoped\n      styleEl['s-sc'] = cssScopeId = baseScope.scopeId + \"-\" + this.count;\n      styleEl.textContent = '/*needs update*/';\n      this.hostStyleMap.set(hostEl, styleEl);\n      this.hostScopeMap.set(hostEl, reScope(baseScope, cssScopeId));\n      this.count++;\n    } else {\n      // This component uses css vars, but it's no-encapsulation (global static)\n      baseScope.styleEl = styleEl;\n\n      if (!baseScope.usesCssVars) {\n        styleEl.textContent = executeTemplate(baseScope.template, {});\n      }\n\n      this.globalScopes.push(baseScope);\n      this.updateGlobal();\n      this.hostScopeMap.set(hostEl, baseScope);\n    }\n\n    return styleEl;\n  };\n\n  CustomStyle.prototype.removeHost = function (hostEl) {\n    var css = this.hostStyleMap.get(hostEl);\n\n    if (css) {\n      css.remove();\n    }\n\n    this.hostStyleMap[\"delete\"](hostEl);\n    this.hostScopeMap[\"delete\"](hostEl);\n  };\n\n  CustomStyle.prototype.updateHost = function (hostEl) {\n    var scope = this.hostScopeMap.get(hostEl);\n\n    if (scope && scope.usesCssVars && scope.isScoped) {\n      var styleEl = this.hostStyleMap.get(hostEl);\n\n      if (styleEl) {\n        var selectors = getActiveSelectors(hostEl, this.hostScopeMap, this.globalScopes);\n        var props = resolveValues(selectors);\n        styleEl.textContent = executeTemplate(scope.template, props);\n      }\n    }\n  };\n\n  CustomStyle.prototype.updateGlobal = function () {\n    updateGlobalScopes(this.globalScopes);\n  };\n\n  CustomStyle.prototype.registerHostTemplate = function (cssText, scopeId, isScoped) {\n    var scope = this.scopesMap.get(scopeId);\n\n    if (!scope) {\n      scope = parseCSS(cssText);\n      scope.scopeId = scopeId;\n      scope.isScoped = isScoped;\n      this.scopesMap.set(scopeId, scope);\n    }\n\n    return scope;\n  };\n\n  return CustomStyle;\n}();\n\n(function (win) {\n  if (win && !win.__cssshim && !(win.CSS && win.CSS.supports && win.CSS.supports('color', 'var(--c)'))) {\n    win.__cssshim = new CustomStyle(win, win.document);\n  }\n})(typeof window !== 'undefined' && window);"],"sourceRoot":""}