{"version":3,"sources":["webpack:///./src/components/Pagination.tsx","webpack:///./src/templates/index.tsx","webpack:///./node_modules/@deckdeckgo/highlight-code/dist/esm-es5 lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object"],"names":["navCss","css","darken","colors","darkgrey","Pagination","_ref","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","Object","core_browser_esm","gatsby_browser_entry","to","rel","String","fromCharCode","Array","from","length","_","i","key","className","HomePosts","name","styles","pageQuery","IndexPage","props","width","data","header","childImageSharp","fluid","sizes","split","height","Number","aspectRatio","useEffect","deckdeckgoHighlightCodeLoader","regenerator_default","a","async","_context","prev","next","require","awrap","defineCustomElements","window","t0","console","error","stop","layouts","Helmet_default","lang","config","title","content","description","property","siteUrl","src","facebook","googleSiteVerification","twitter","Wrapper","css_browser_esm","outer","SiteHeader","style","backgroundImage","inner","shared","logo","maxHeight","fixed","alt","SiteNav","isHome","id","SiteMain","PostFeed","PostFeedRaise","allMarkdownRemark","edges","map","post","node","frontmatter","draft","PostCard","fields","slug","children","components_Pagination","pageContext","Footer","./deckgo-highlight-code.entry.js","webpackAsyncContext","req","ids","__webpack_require__","e","then","Promise","resolve","Error","code","keys","module","exports"],"mappings":"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","file":"component---src-templates-index-tsx-e0b0f4d805a08d901bc1.js","sourcesContent":["import { Link } from 'gatsby';\r\nimport * as React from 'react';\r\nimport { darken } from 'polished';\r\nimport { css } from '@emotion/core';\r\n\r\nimport { colors } from '../styles/colors';\r\n\r\nexport interface PaginationProps {\r\n  currentPage: number;\r\n  numPages: number;\r\n}\r\n\r\nconst navCss = css`\r\n  text-align: center;\r\n  div {\r\n    display: inline-block;\r\n  }\r\n\r\n  a {\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;\r\n    background: #fff;\r\n    color: black;\r\n    float: left;\r\n    padding: 8px 16px;\r\n    text-decoration: none;\r\n    transition: background-color .3s;\r\n    border: 1px solid #ddd;\r\n    margin: 0 4px;\r\n    box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\r\n    border-radius: 6px;\r\n    margin-bottom: 5px;\r\n    min-width: 50px;\r\n\r\n    &.active {\r\n      -webkit-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n      -moz-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n      box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n    }\r\n\r\n    &:hover:not(.active) {\r\n      background-color: #ddd;\r\n    }\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages }) => {\r\n  const isFirst = currentPage === 1;\r\n  const isLast = currentPage === numPages;\r\n  const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString();\r\n  const nextPage = (currentPage + 1).toString();\r\n\r\n  return (\r\n    <nav css={navCss}>\r\n      <div>\r\n        {!isFirst && (\r\n          <Link to={prevPage} rel=\"prev\">\r\n            {/* << symbol */}\r\n            {String.fromCharCode(171)}\r\n          </Link>\r\n        )}\r\n\r\n        {Array.from({ length: numPages }, (_, i) => (\r\n          <Link key={`pagination-number${i + 1}`} className={i + 1 === currentPage ? 'active' : ''} to={`/${i === 0 ? '' : i + 1}`}>\r\n            {i + 1}\r\n          </Link>\r\n        ))}\r\n\r\n        {!isLast && (\r\n          <Link to={nextPage} rel=\"next\">\r\n            {/* >> symbol */}\r\n            {String.fromCharCode(187)}\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { graphql } from 'gatsby';\r\nimport React, { useEffect } from 'react';\r\nimport { css } from '@emotion/core';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport Footer from '../components/Footer';\r\nimport SiteNav from '../components/header/SiteNav';\r\nimport PostCard from '../components/PostCard';\r\nimport Wrapper from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport config from '../website-config';\r\nimport Pagination from '../components/Pagination';\r\n\r\nimport {\r\n  inner,\r\n  outer,\r\n  PostFeed,\r\n  PostFeedRaise,\r\n  SiteDescription,\r\n  SiteHeader,\r\n  SiteHeaderContent,\r\n  SiteMain,\r\n  SiteTitle,\r\n} from '../styles/shared';\r\nimport { PageContext } from './post';\r\n\r\nconst HomePosts = css`\r\n  @media (min-width: 795px) {\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) {\r\n      flex: 1 1 100%;\r\n      flex-direction: row;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image-link {\r\n      position: relative;\r\n      flex: 1 1 auto;\r\n      border-radius: 5px 0 0 5px;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content {\r\n      flex: 0 1 357px;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) h2 {\r\n      font-size: 2.6rem;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) p {\r\n      font-size: 1.8rem;\r\n      line-height: 1.55em;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content-link {\r\n      padding: 30px 40px 0;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-meta {\r\n      padding: 0 40px 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface IndexProps {\r\n  pageContext: {\r\n    currentPage: number;\r\n    numPages: number;\r\n  };\r\n  data: {\r\n    logo: {\r\n      childImageSharp: {\r\n        fixed: any;\r\n      };\r\n    };\r\n    header: {\r\n      childImageSharp: {\r\n        fluid: any;\r\n      };\r\n    };\r\n    allMarkdownRemark: {\r\n      edges: Array<{\r\n        node: PageContext;\r\n      }>;\r\n    };\r\n  };\r\n}\r\n\r\nconst IndexPage: React.FC<IndexProps> = props => {\r\n  const width = props.data.header.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\r\n  const height = String(Number(width) / props.data.header.childImageSharp.fluid.aspectRatio);\r\n\r\n  const doDeckdeckgoHIghLOightCodeLoader = async () => {\r\n    try {\r\n      const deckdeckgoHighlightCodeLoader = require(\"@deckdeckgo/highlight-code/dist/loader\")\r\n      await deckdeckgoHighlightCodeLoader.defineCustomElements(window)\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n      doDeckdeckgoHIghLOightCodeLoader()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <IndexLayout css={HomePosts}>\r\n      <Helmet>\r\n        <html lang={config.lang} />\r\n        <title>{config.title}</title>\r\n        <meta name=\"description\" content={config.description} />\r\n        <meta property=\"og:site_name\" content={config.title} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:title\" content={config.title} />\r\n        <meta property=\"og:description\" content={config.description} />\r\n        <meta property=\"og:url\" content={config.siteUrl} />\r\n        <meta\r\n          property=\"og:image\"\r\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fluid.src}`}\r\n        />\r\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\r\n        {config.googleSiteVerification && <meta name=\"google-site-verification\" content={config.googleSiteVerification} />}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:title\" content={config.title} />\r\n        <meta name=\"twitter:description\" content={config.description} />\r\n        <meta name=\"twitter:url\" content={config.siteUrl} />\r\n        <meta\r\n          name=\"twitter:image\"\r\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fluid.src}`}\r\n        />\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:site\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n        <meta property=\"og:image:width\" content={width} />\r\n        <meta property=\"og:image:height\" content={height} />\r\n      </Helmet>\r\n      <Wrapper>\r\n        <header\r\n          css={[outer, SiteHeader]}\r\n          style={{\r\n            backgroundImage: `url('${props.data.header.childImageSharp.fluid.src}')`,\r\n          }}\r\n        >\r\n          <div css={inner}>\r\n            <SiteHeaderContent>\r\n              <SiteTitle>\r\n                {props.data.logo ? (\r\n                  <img\r\n                    style={{ maxHeight: '45px' }}\r\n                    src={props.data.logo.childImageSharp.fixed.src}\r\n                    alt={config.title}\r\n                  />\r\n                ) : (\r\n                  config.title\r\n                )}\r\n              </SiteTitle>\r\n              <SiteDescription>{config.description}</SiteDescription>\r\n            </SiteHeaderContent>\r\n            <SiteNav isHome />\r\n          </div>\r\n        </header>\r\n        <main id=\"site-main\" css={[SiteMain, outer]}>\r\n          <div css={inner}>\r\n            <div css={[PostFeed, PostFeedRaise]}>\r\n              {props.data.allMarkdownRemark.edges.map(post => {\r\n                // filter out drafts in production\r\n                return (\r\n                  (post.node.frontmatter.draft !== true ||\r\n                    process.env.NODE_ENV !== 'production') && (\r\n                    <PostCard key={post.node.fields.slug} post={post.node} />\r\n                  )\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {props.children}\r\n        <Pagination currentPage={props.pageContext.currentPage} numPages={props.pageContext.numPages} />\r\n        <Footer />\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query blogPageQuery($skip: Int!, $limit: Int!) {\r\n    logo: file(relativePath: { eq: \"img/thxwelchs-logo-v2.png\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fixed {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    header: file(relativePath: { eq: \"img/blog-cover.jpg\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fluid(maxWidth: 2000) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC },\r\n      filter: { \r\n        frontmatter: {\r\n           draft: { ne: true },\r\n           category: { ne: null }\r\n        }\r\n      },\r\n      limit: $limit,\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            date\r\n            tags\r\n            draft\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 3720) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            author {\r\n              id\r\n              bio\r\n              avatar {\r\n                children {\r\n                  ... on ImageSharp {\r\n                    fixed(quality: 90) {\r\n                      src\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          excerpt\r\n          fields {\r\n            layout\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","var map = {\n\t\"./deckgo-highlight-code.entry.js\": [\n\t\t239,\n\t\t14\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 237;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}